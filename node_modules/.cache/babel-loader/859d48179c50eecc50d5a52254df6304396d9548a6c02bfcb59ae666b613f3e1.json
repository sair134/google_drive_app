{"ast":null,"code":"var _jsxFileName = \"C:\\\\google_drive_app\\\\src\\\\Pdf.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Worker, Viewer } from \"@react-pdf-viewer/core\";\nimport \"@react-pdf-viewer/core/lib/styles/index.css\";\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Pdf = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [pdf, setPdf] = useState('');\n  useEffect(() => {\n    const fetchfile = async () => {\n      const resp = await fetch(`http://localhost:5000/download/${id}`);\n      const file = await resp.arrayBuffer();\n      if (file) {\n        const url = URL.createObjectURL(file);\n      }\n    };\n    fetchfile();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"100vh\",\n      width: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"PDF Viewer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), \"((id && pdf)? (\", /*#__PURE__*/_jsxDEV(Worker, {\n      workerUrl: `https://unpkg.com/pdfjs-dist@3.11.174/build/pdf.worker.min.js`,\n      children: /*#__PURE__*/_jsxDEV(Viewer, {\n        fileUrl: pdfUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), \") : (\", /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"Something went wrong. Please try after some time.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), \")}\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Pdf, \"ucoX4BQCrWcx2zfP4f+HIm2MdxA=\", false, function () {\n  return [useParams];\n});\n_c = Pdf;\nexport default Pdf;\nvar _c;\n$RefreshReg$(_c, \"Pdf\");","map":{"version":3,"names":["React","useParams","Worker","Viewer","useState","useEffect","jsxDEV","_jsxDEV","Pdf","_s","id","pdf","setPdf","fetchfile","resp","fetch","file","arrayBuffer","url","URL","createObjectURL","style","height","width","children","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","workerUrl","fileUrl","pdfUrl","_c","$RefreshReg$"],"sources":["C:/google_drive_app/src/Pdf.js"],"sourcesContent":["import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Worker, Viewer } from \"@react-pdf-viewer/core\";\r\nimport \"@react-pdf-viewer/core/lib/styles/index.css\";\r\nimport {useState, useEffect} from 'react';\r\n\r\nconst Pdf = () => {\r\n  const { id } = useParams();\r\n  const [pdf, setPdf] = useState('')\r\nuseEffect(()=>{\r\n    const fetchfile = async()=>{\r\n        const resp = await fetch(`http://localhost:5000/download/${id}`)\r\n        const file = await resp.arrayBuffer();\r\n        if(file){\r\n            const url = URL.createObjectURL(file)\r\n        }\r\n    }\r\n    fetchfile()\r\n}, [])\r\n\r\n  \r\n\r\n  return (\r\n    <div style={{ height: \"100vh\", width: \"100%\" }}>\r\n      <h2 style={{ textAlign: \"center\" }}>PDF Viewer</h2>\r\n      ((id && pdf)? (\r\n        <Worker workerUrl={`https://unpkg.com/pdfjs-dist@3.11.174/build/pdf.worker.min.js`}>\r\n          <Viewer fileUrl={pdfUrl} />\r\n        </Worker>\r\n      ) : (\r\n        <p style={{ textAlign: \"center\" }}>Something went wrong. Please try after some time.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pdf;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,MAAM,EAAEC,MAAM,QAAQ,wBAAwB;AACvD,OAAO,6CAA6C;AACpD,SAAQC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM;IAAEC;EAAG,CAAC,GAAGT,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACU,GAAG,EAAEC,MAAM,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpCC,SAAS,CAAC,MAAI;IACV,MAAMQ,SAAS,GAAG,MAAAA,CAAA,KAAS;MACvB,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,kCAAkCL,EAAE,EAAE,CAAC;MAChE,MAAMM,IAAI,GAAG,MAAMF,IAAI,CAACG,WAAW,CAAC,CAAC;MACrC,IAAGD,IAAI,EAAC;QACJ,MAAME,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAC;MACzC;IACJ,CAAC;IACDH,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAIJ,oBACEN,OAAA;IAAKc,KAAK,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC7CjB,OAAA;MAAIc,KAAK,EAAE;QAAEI,SAAS,EAAE;MAAS,CAAE;MAAAD,QAAA,EAAC;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,mBAEjD,eAAAtB,OAAA,CAACL,MAAM;MAAC4B,SAAS,EAAE,+DAAgE;MAAAN,QAAA,eACjFjB,OAAA,CAACJ,MAAM;QAAC4B,OAAO,EAAEC;MAAO;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC,SAET,eAAAtB,OAAA;MAAGc,KAAK,EAAE;QAAEI,SAAS,EAAE;MAAS,CAAE;MAAAD,QAAA,EAAC;IAAiD;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,MAE5F;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEV,CAAC;AAACpB,EAAA,CA5BID,GAAG;EAAA,QACQP,SAAS;AAAA;AAAAgC,EAAA,GADpBzB,GAAG;AA8BT,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}