{"ast":null,"code":"var _jsxFileName = \"C:\\\\google_drive_app\\\\src\\\\Pdf.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Worker, Viewer } from \"@react-pdf-viewer/core\";\nimport \"@react-pdf-viewer/core/lib/styles/index.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport Spinner from './Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Pdf = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [pdfUrl, setPdfUrl] = useState(null);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (pdfUrl) return;\n    const fetchPdf = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/download/${id}`);\n        if (!response.ok) throw new Error(\"Failed to fetch PDF\");\n        const blob = await response.blob();\n        setPdfUrl(URL.createObjectURL(blob));\n      } catch (error) {\n        setError('Something went wrong. Please try again');\n      }\n    };\n    if (id) fetchPdf();\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"90vh\",\n      width: \"100%\",\n      position: \"relative\",\n      overflow: \"hidden\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate(-1),\n      style: {\n        position: \"absolute\",\n        top: \"10px\",\n        right: \"10px\",\n        padding: \"8px 12px\",\n        backgroundColor: \"#f44336\",\n        color: \"white\",\n        border: \"none\",\n        borderRadius: \"4px\",\n        cursor: \"pointer\"\n      },\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"PDF Viewer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), pdfUrl ? /*#__PURE__*/_jsxDEV(Worker, {\n      workerUrl: `https://unpkg.com/pdfjs-dist@3.11.174/build/pdf.worker.min.js`,\n      children: /*#__PURE__*/_jsxDEV(Viewer, {\n        fileUrl: pdfUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(Spinner, {\n      bg: \"white\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 38\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Pdf, \"+k+zOsIh458cbizgvKSzUQQ4ug4=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Pdf;\nexport default Pdf;\nvar _c;\n$RefreshReg$(_c, \"Pdf\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Worker","Viewer","useNavigate","Spinner","jsxDEV","_jsxDEV","Pdf","_s","id","pdfUrl","setPdfUrl","error","setError","navigate","fetchPdf","response","fetch","ok","Error","blob","URL","createObjectURL","style","height","width","position","overflow","children","onClick","top","right","padding","backgroundColor","color","border","borderRadius","cursor","fileName","_jsxFileName","lineNumber","columnNumber","textAlign","workerUrl","fileUrl","bg","_c","$RefreshReg$"],"sources":["C:/google_drive_app/src/Pdf.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Worker, Viewer } from \"@react-pdf-viewer/core\";\r\nimport \"@react-pdf-viewer/core/lib/styles/index.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Spinner from './Spinner';\r\n\r\nconst Pdf = () => {\r\n  const { id } = useParams();\r\n  const [pdfUrl, setPdfUrl] = useState(null);\r\n  const [error, setError] = useState('')\r\n  const navigate = useNavigate()\r\n\r\n  useEffect(() => {\r\n    if(pdfUrl) return;\r\n    const fetchPdf = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/download/${id}`);\r\n        if (!response.ok) throw new Error(\"Failed to fetch PDF\");\r\n        const blob = await response.blob();\r\n        setPdfUrl(URL.createObjectURL(blob));\r\n      } catch (error) {\r\n        setError('Something went wrong. Please try again')\r\n      }\r\n    };\r\n    if (id) fetchPdf();\r\n  }, [id]);\r\n\r\n  return (\r\n    <div style={{ height: \"90vh\", width: \"100%\", position: \"relative\", overflow: \"hidden\" }}>\r\n      <button\r\n        onClick={() => navigate(-1)}\r\n        style={{\r\n          position: \"absolute\",\r\n          top: \"10px\",\r\n          right: \"10px\",\r\n          padding: \"8px 12px\",\r\n          backgroundColor: \"#f44336\",\r\n          color: \"white\",\r\n          border: \"none\",\r\n          borderRadius: \"4px\",\r\n          cursor: \"pointer\",\r\n        }}\r\n      >\r\n        Close\r\n      </button>\r\n      <h2 style={{ textAlign: \"center\" }}>PDF Viewer</h2>\r\n      {pdfUrl ? (\r\n        <Worker workerUrl={`https://unpkg.com/pdfjs-dist@3.11.174/build/pdf.worker.min.js`}>\r\n          <Viewer fileUrl={pdfUrl} />\r\n        </Worker>\r\n      ) : \r\n    \r\n         error ? (<p>{error}</p>) : (<Spinner bg=\"white\" />) \r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pdf;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}